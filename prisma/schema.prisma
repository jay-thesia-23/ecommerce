generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  name        String
  password    String
  updatedAt   DateTime      @updatedAt
  email       String        @unique
  createdAt   DateTime      @default(now())
  roleId      Int           @default(2)
  addCarts    AddCart[]
  orders      Checkout[]
  userAddress UserAddress[]
  deleted Boolean @default(false)
  role        Role          @relation(fields: [roleId], references: [id])

  @@index([roleId], map: "users_roleId_fkey")
  @@map("users")
}

model UserAddress {
  id        Int      @id @default(autoincrement())
  address   String
  city      String
  zipCode   Int
  mobile    Int
  userId    Int
  deleted Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])

  @@index([userId], map: "user_address_userId_fkey")
  @@map("user_address")
}

model Role {
  id        Int      @id @default(autoincrement())
  role_type String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]

  @@map("roles")
}

model Category {
  id            Int           @id @default(autoincrement())
  categoryName  String        @unique
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  products      Product[]
  subcategories SubCategory[]

  @@map("categories")
}

model SubCategory {
  id              Int       @id @default(autoincrement())
  subCategoryName String    @unique
  categoryId      Int
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  products        Product[]
  category        Category  @relation(fields: [categoryId], references: [id])

  @@index([categoryId], map: "subcategories_categoryId_fkey")
  @@map("subcategories")
}

model Product {
  id              Int         @id @default(autoincrement())
  productName     String      @unique
  productDesc     String      @db.Text
  subCategoryId   Int
  categoryId      Int
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  productQuantity Int
  productImage    String
  productPrice    Int
  cart            AddCart?
  category        Category    @relation(fields: [categoryId], references: [id])
  subCategory     SubCategory @relation(fields: [subCategoryId], references: [id])

  @@index([categoryId], map: "Product_categoryId_fkey")
  @@index([subCategoryId], map: "Product_subCategoryId_fkey")
  @@map("products")
}

model AddCart {
  id              Int      @id @default(autoincrement())
  productId       Int      @unique
  productQuantity Int      @default(1)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  userId          Int
  product         Product  @relation(fields: [productId], references: [id])
  user            User     @relation(fields: [userId], references: [id])

  @@index([userId], map: "addCarts_userId_fkey")
  @@map("addCarts")
}

model Checkout{
  id Int @id @default(autoincrement())
  productId Int
  userId Int
  orderQantity Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  user            User     @relation(fields: [userId], references: [id])

  @@map("checkouts")

  
}
