generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  name        String
  password    String
  email       String        @unique
  roleId      Int         @default(2)
  role      Role     @relation(fields: [roleId], references: [id])
  userAddress UserAddress[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@map("users")
}

model UserAddress {
  id        Int      @id @default(autoincrement())
  address   String
  city      String
  zipCode   Int
  mobile    Int
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])

  @@index([userId], map: "user_address_userId_fkey")
  @@map("user_address")
}

model Role {
  id        Int      @id @default(autoincrement())
  role_type String   @unique

  users      User[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("roles")
}

model Category {
  id            Int           @id @default(autoincrement())
  categoryName  String        @unique
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  products      Product[]
  subcategories SubCategory[]

  @@map("categories")
}

model SubCategory {
  id              Int       @id @default(autoincrement())
  subCategoryName String    @unique
  categoryId      Int
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  products        Product[]
  category        Category  @relation(fields: [categoryId], references: [id])

  @@index([categoryId], map: "subcategories_categoryId_fkey")
  @@map("subcategories")
}

model Product {
  id            Int         @id @default(autoincrement())
  productName   String      @unique
  productPrice  Int
  productDesc   String @db.Text
  productQuantity Int
  productImage String
  subCategoryId Int
  categoryId    Int
  


  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  category      Category    @relation(fields: [categoryId], references: [id])
  subCategory   SubCategory @relation(fields: [subCategoryId], references: [id])
  cart AddCart?

  @@index([categoryId], map: "Product_categoryId_fkey")
  @@index([subCategoryId], map: "Product_subCategoryId_fkey")

  @@map("products")
}


model AddCart{
  id Int @id @default(autoincrement())
  productId Int @unique
  product Product @relation(fields: [productId], references: [id])
  productQuantity Int @default(1)

  @@map("addCarts")
}